<application>
  <component name="AppStorage">
    <histories>
      <item value="&lt;p&gt;The &lt;tt&gt;Map&lt;/tt&gt; interface provides three &lt;i&gt;collection views&lt;/i&gt;, which * allow a map's contents to be viewed as a set of keys, collection of values, * or set of key-value mappings. The &lt;i&gt;order&lt;/i&gt; of a map is defined as * the order in which the iterators on the map's collection views return their * elements. Some map implementations, like the &lt;tt&gt;TreeMap&lt;/tt&gt; class, make * specific guarantees as to their order; others, like the &lt;tt&gt;HashMap&lt;/tt&gt; * class, do not." />
      <item value="This interface takes the place of the &lt;tt&gt;Dictionary&lt;/tt&gt; class, which * was a totally abstract class rather than an interface." />
      <item value="An object that maps keys to values. A map cannot contain duplicate keys; * each key can map to at most one value." />
      <item value="IllegalStateException implementations may, but are not * required to, throw this exception if the entry has been * removed from the backing map." />
      <item value="Returns the key corresponding to this entry." />
      <item value="Holds cached entrySet(). Note that AbstractMap fields are used * for keySet() and values()." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="7" />
        <entry key="ENGLISH" value="8" />
      </map>
    </option>
  </component>
</application>